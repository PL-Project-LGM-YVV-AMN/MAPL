
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEQUALSleftmultiplierleftplusminusEQUALS adjugate comma crossProduct determinant dotProduct float identifier int inverse lCurlyBracket lHardBracket matrix minus multiplier plus rCurlyBracket rHardBracket transpose vectorassignment : identifier EQUALS termexpression : termterm : factor\n            | vector\n            | comma\n            | float\n            | int\n            | matrix\n            | multiplierfactor : lCurlyBracket expression rCurlyBracket\n              | lHardBracket expression rHardBracketexpression : expression plus vectorexpression : expression minus vectorexpression : expression plus matrixexpression : expression minus matrixexpression : multiplier vectorexpression : multiplier matrixexpression : matrix matrixexpression : transpose matrixexpression : determinant matrixexpression : vector dotProduct vectorexpression : inverse matrixexpression : adjugate matrixterm : identifier'
    
_lr_action_items = {'identifier':([0,3,13,14,],[2,4,4,4,]),'$end':([1,4,5,6,7,8,9,10,11,12,25,36,],[0,-24,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,]),'EQUALS':([2,],[3,]),'vector':([3,13,14,19,26,27,28,],[7,17,17,30,37,39,41,]),'comma':([3,13,14,],[8,8,8,]),'float':([3,13,14,],[9,9,9,]),'int':([3,13,14,],[10,10,10,]),'matrix':([3,13,14,18,19,20,21,22,23,26,27,],[11,18,18,29,31,32,33,34,35,38,40,]),'multiplier':([3,13,14,],[12,19,19,]),'lCurlyBracket':([3,13,14,],[13,13,13,]),'lHardBracket':([3,13,14,],[14,14,14,]),'rCurlyBracket':([4,6,8,9,10,15,16,17,18,19,25,29,30,31,32,33,34,35,36,37,38,39,40,41,],[-24,-3,-5,-6,-7,25,-2,-4,-8,-9,-10,-18,-16,-17,-19,-20,-22,-23,-11,-12,-14,-13,-15,-21,]),'plus':([4,6,8,9,10,15,16,17,18,19,24,25,29,30,31,32,33,34,35,36,37,38,39,40,41,],[-24,-3,-5,-6,-7,26,-2,-4,-8,-9,26,-10,-18,-16,-17,-19,-20,-22,-23,-11,-12,-14,-13,-15,-21,]),'minus':([4,6,8,9,10,15,16,17,18,19,24,25,29,30,31,32,33,34,35,36,37,38,39,40,41,],[-24,-3,-5,-6,-7,27,-2,-4,-8,-9,27,-10,-18,-16,-17,-19,-20,-22,-23,-11,-12,-14,-13,-15,-21,]),'rHardBracket':([4,6,8,9,10,16,17,18,19,24,25,29,30,31,32,33,34,35,36,37,38,39,40,41,],[-24,-3,-5,-6,-7,-2,-4,-8,-9,36,-10,-18,-16,-17,-19,-20,-22,-23,-11,-12,-14,-13,-15,-21,]),'transpose':([13,14,],[20,20,]),'determinant':([13,14,],[21,21,]),'inverse':([13,14,],[22,22,]),'adjugate':([13,14,],[23,23,]),'dotProduct':([17,],[28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assignment':([0,],[1,]),'term':([3,13,14,],[5,16,16,]),'factor':([3,13,14,],[6,6,6,]),'expression':([13,14,],[15,24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> assignment","S'",1,None,None,None),
  ('assignment -> identifier EQUALS term','assignment',3,'p_assignment','yacc_test.py',19),
  ('expression -> term','expression',1,'p_expression_term','yacc_test.py',23),
  ('term -> factor','term',1,'p_term_vector','yacc_test.py',32),
  ('term -> vector','term',1,'p_term_vector','yacc_test.py',33),
  ('term -> comma','term',1,'p_term_vector','yacc_test.py',34),
  ('term -> float','term',1,'p_term_vector','yacc_test.py',35),
  ('term -> int','term',1,'p_term_vector','yacc_test.py',36),
  ('term -> matrix','term',1,'p_term_vector','yacc_test.py',37),
  ('term -> multiplier','term',1,'p_term_vector','yacc_test.py',38),
  ('factor -> lCurlyBracket expression rCurlyBracket','factor',3,'p_factor','yacc_test.py',42),
  ('factor -> lHardBracket expression rHardBracket','factor',3,'p_factor','yacc_test.py',43),
  ('expression -> expression plus vector','expression',3,'p_expression_plus_vector','yacc_test.py',48),
  ('expression -> expression minus vector','expression',3,'p_expression_minus_vector','yacc_test.py',57),
  ('expression -> expression plus matrix','expression',3,'p_expression_plus_matrix','yacc_test.py',66),
  ('expression -> expression minus matrix','expression',3,'p_expression_minus_matrix','yacc_test.py',72),
  ('expression -> multiplier vector','expression',2,'p_expression_scalar_vector','yacc_test.py',78),
  ('expression -> multiplier matrix','expression',2,'p_expression_scalar_matrix','yacc_test.py',84),
  ('expression -> matrix matrix','expression',2,'p_expression_cross_product_matrix','yacc_test.py',90),
  ('expression -> transpose matrix','expression',2,'p_expression_transpose_matrix','yacc_test.py',96),
  ('expression -> determinant matrix','expression',2,'p_expression_det_matrix','yacc_test.py',100),
  ('expression -> vector dotProduct vector','expression',3,'p_expression_dot_product_vector','yacc_test.py',104),
  ('expression -> inverse matrix','expression',2,'p_expression_inverse_matrix','yacc_test.py',112),
  ('expression -> adjugate matrix','expression',2,'p_expression_adjugate_matrix','yacc_test.py',116),
  ('term -> identifier','term',1,'p_term_name','yacc_test.py',120),
]
